@model IEnumerable<bugTracker.Models.Ticket>
@using bugTracker.Extensions

@{
    ViewBag.Title = "View Tickets";
}

<div class="container">
    <div class="x_panel">
        <div class="x_title">
            <h2>@ViewBag.Title</h2>
            <div class="clearfix"></div>
        </div>
        <div id="contentDiv"></div>
        <div class="x_content">
            <table id="ticketTbl" class="table table-striped projects">
                <thead>
                    <tr>
                        <th>
                            @*@Html.DisplayNameFor(model => model.AssignedToUser.FirstName)*@
                            @Html.DisplayName("Developer")
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(model => model.OwnerUser.FirstName)*@
                            @Html.DisplayName("Submitter")
                        </th>
                        <th>
                            @*@Html.DisplayNameFor(model => model.Project.Name)*@
                            @Html.DisplayName("Project")

                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TicketPriority.Priority)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TicketStatus.Status)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TicketType.Type)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Title)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Description)
                        </th>

                        <th>
                           @Html.DisplayNameFor(model => model.Created)
                        </th>

                        <th>
                            @Html.DisplayNameFor(model => model.Updated)
                        </th>
                        <th></th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.AssignedToUser.FirstName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.OwnerUser.FirstName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Project.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TicketPriority.Priority)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TicketStatus.Status)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TicketType.Type)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Title)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @DateTime.Parse(Html.DisplayFor(modelItem => item.Created).ToString()).ToString("f")
                            </td>
                            <td>
                                @if (!(string.IsNullOrEmpty(Html.DisplayFor(modelItem => item.Updated).ToString()))) {
                                @DateTime.Parse(Html.DisplayFor(modelItem => item.Updated).ToString()).ToString("f")
                                }
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Execute Datatables <thead><tbody> -->
@section scripts {
    <script>
        $(document).ready(function () {
            var table = $('#ticketTbl').DataTable({
                "columnDefs": [{ "visible": true, "targets": 2 }],
                "order": [[7, 'asc']],
                "displayLength": 25,
                "drawCallback": function (settings) {
                    var api = this.api();
                    if (!(api.column(2).visible())) {
                        //var api = this.api();
                        var rows = api.rows({ page: 'current' }).nodes();
                        var last = null;

                        api.column(2, { page: 'current' }).data().each(function (group, i) {
                            if (last !== group) {
                                $(rows).eq(i).before(
                                    '<tr class="group"><td colspan="5">' + group + '</td></tr>'
                                );

                                last = group;
                            }
                        });
                    }

                }
            });

            var admin = '@(User.IsInRole("Administrator") ? "true" : "false")';
            var sub = '@(User.IsInRole("Submitter") ? "true" : "false")';
            var dev = '@(User.IsInRole("Developer") ? "true" : "false")';
            var pm = '@(User.IsInRole("Project Manager") ? "true" : "false")';

            if (dev === "true" || admin === "true") {
                //Developer
                $('<input type="button" id="assignedBtn" value="Assigned to me" />').appendTo("#contentDiv");
            }

            if (dev === "true" || pm === "true" || admin === "true") {
                //Developer and Project Manager
                $('<input type="button" id="myPrjViewBtn" value="Tickets on my Projects" />').appendTo("#contentDiv");
            }

            if ( sub === "true" || admin === "true")
            {
                //Submitter
                $('<input type="button" id="ticketsOwnBtn" value="Tickets owned by me" />').appendTo("#contentDiv");
            }

            //reset
            $('<input type="button" id="resetBtn" value="Show All" />').appendTo("#contentDiv");

            //Developer Owned Tickets
            $('#assignedBtn').on('click', function () {
                var result = @Html.Raw(Json.Encode(User.Identity.FirstName().ToString()));
                table.columns().visible(true).search("");
                table.columns(0).search(result).draw();
            });

            //Show Tickets by Project
            $('#myPrjViewBtn').on('click', function () {
                table.columns(2).visible(false).draw();
            });

            //Submitter View Tickets Owned
            $('#ticketsOwnBtn').on('click', function () {
                var result = @Html.Raw(Json.Encode(User.Identity.FirstName().ToString()));
                table.columns().visible(true).search("");
                table.column(1).search(result).draw();
            });

            //Reset Table
            $('#resetBtn').on('click', function () {
                table.columns().visible(true).search("").draw();
            });
        });
    </script>
}